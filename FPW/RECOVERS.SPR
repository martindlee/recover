*       *********************************************************
*       *                                                         
*       * 02/10/06            RECOVERS.SPR               12:15:11 
*       *                                                         
*       *********************************************************
*       *                                                         
*       * Author's Name                                           
*       *                                                         
*       * Copyright (c) 2006 Company Name                         
*       * Address                                                 
*       * City,     Zip                                           
*       *                                                         
*       * Description:                                            
*       * This program was automatically generated by GENSCRN.    
*       *                                                         
*       *********************************************************


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

m.rborder = SET("READBORDER")
SET READBORDER ON

*       *********************************************************
*       *                                                         
*       *               Windows Window definitions                
*       *                                                         
*       *********************************************************
*

IF NOT WEXIST("recovers") ;
	OR UPPER(WTITLE("RECOVERS")) == "RECOVERS.PJX" ;
	OR UPPER(WTITLE("RECOVERS")) == "RECOVERS.SCX" ;
	OR UPPER(WTITLE("RECOVERS")) == "RECOVERS.MNX" ;
	OR UPPER(WTITLE("RECOVERS")) == "RECOVERS.PRG" ;
	OR UPPER(WTITLE("RECOVERS")) == "RECOVERS.FRX" ;
	OR UPPER(WTITLE("RECOVERS")) == "RECOVERS.QPR"
	DEFINE WINDOW recovers ;
		AT  0.000, 0.000  ;
		SIZE 18.154,91.800 ;
		TITLE "Recover V4.0b for FoxPro/Win 2.6" ;
		FONT "MS Sans Serif", 8 ;
		NOFLOAT ;
		NOCLOSE ;
		NOMINIMIZE ;
		DOUBLE
	MOVE WINDOW recovers CENTER
ENDIF


*       *********************************************************
*       *                                                         
*       *         RECOVERS/Windows Setup Code - SECTION 2         
*       *                                                         
*       *********************************************************
*

#REGION 1
PRIVATE ALL
Set Proc To Illegal
FileInfo = ''
FPTfile = ''
OptCodes = ''
GenDefOpts = ''
Dext='DEF'
DbfName = 'Not selected'
MemName = ''
HelpPath = IIF(FILE('MANUAL.TXT'), FULLPATH('MANUAL.TXT'),'')
RepPath = IIF(FILE('Recover.rep'), FULLPATH('Recover.rep'),'')

Default0 = Fullpath('.')
FilePath = '' && path of file to repair

DIMENSION OptCode[21]
FOR i = 1 TO 21
  OptCode[i] = .T.
ENDFOR
OptCode[3] = .F. && do not check field in record scan
OptCode[4] = .F. && do not use warnings in field check
OptCode[14] = .F. && do not use SPM as default
OptCode[17] = .F. && do not extract extraneous memos

Dimension GenOpt[6]
GenOpt = .F.
GenOpt[4] = .T. && use dialogs


*       *********************************************************
*       *                                                         
*       *             RECOVERS/Windows Screen Layout              
*       *                                                         
*       *********************************************************
*

#REGION 1
IF WVISIBLE("recovers")
	ACTIVATE WINDOW recovers SAME
ELSE
	ACTIVATE WINDOW recovers NOSHOW
ENDIF
@ 2.846,2.200 SAY "RecordFile:" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T"
@ 2.846,14.800 SAY Dbfname ;
	SIZE 1.000,73.400 ;
	FONT "MS Sans Serif", 8 ;
	PICTURE "@T"
@ 0.154,23.800 SAY "Copyright (C) 1995, Abri Technologies" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "BT"
@ 1.308,35.000 SAY "Single user license" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	COLOR RGB(0,0,255,,,,)
@ 6.077,6.000 GET RecSels ;
	PICTURE "@*HN Select record file;ErrorScan / Repair;View or Scan" ;
	SIZE 1.769,21.500,0.667 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID RECSELSV()
@ 8.385,6.000 GET RecSels2 ;
	PICTURE "@*HN View Repair Report;Generate .DEF file;View manual.txt" ;
	SIZE 1.769,21.500,0.667 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID RECSELS2V()
@ 14.154,26.600 GET Ropts ;
	PICTURE "@*HN OPTIONS;E X I T" ;
	SIZE 2.188,11.750,0.500 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 10 ;
	STYLE "B" ;
	VALID ROPTSV()
@ 10.154,31.200 SAY "Requires good DBF/FPT copy." + CHR(13) + ;
		"But you can attempt it from" + CHR(13) + ;
		"bad file with GenDef option." ;
	SIZE 3.000,29.400, 0.000 ;
	PICTURE "@I" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T"
@ 3.923,14.800 SAY FileInfo ;
	SIZE 1.000,47.200 ;
	FONT "MS Sans Serif", 8

IF NOT WVISIBLE("recovers")
	ACTIVATE WINDOW recovers
ENDIF

READ CYCLE MODAL ;
	SHOW _1qb0q9gce()

RELEASE WINDOW recovers

#REGION 0

SET READBORDER &rborder

IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       *********************************************************
*       *                                                         
*       *              RECOVERS/Windows Cleanup Code              
*       *                                                         
*       *********************************************************
*

#REGION 1
SET DEFAULT TO (Default0)

**----------


*       *********************************************************
*       *                                                         
*       *  RECOVERS/Windows Supporting Procedures and Functions   
*       *                                                         
*       *********************************************************
*

#REGION 1
Procedure FileLn
Parameter FileName
* returns length of a file
PRIVATE FileArr, FileLength
DIMENSION FileArr[1,5]
=ADIR(FileArr, FileName) && get file details to FileArr
FileLength=FileArr[1,2]
Return IIF (FileLength < 0, 2^32 + FileLength, FileLength)

*----------
Procedure MessageBox
* This will be ignored by VFP
Parameters Msg, Msgtype, MsgTitle
Private MacroStr
MacroStr = "rMsgBox(Msg, MsgType, MsgTitle)"
Return &MacroStr

*       *********************************************************
*       *                                                         
*       * RECSELSV           RecSels VALID                        
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         RECOVERS,     Record Number:    6  
*       * Variable:            RecSels                            
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      1                                  
*       *                                                         
*       *********************************************************
*
FUNCTION RECSELSV     &&  RecSels VALID
#REGION 1
* First row of selection buttons
DO CASE
CASE RecSels = 1 && select new DbfFile
  DbfName = GETFILE('DBF', 'Select .DBF:','Select',0)
  IF NOT EMPTY(DbfName)
    IF FILE(DBFname)
      FileLen = FileLn(DBFname)
      FileInfo = ALLT(STR(FileLen)) + " bytes."
      FilePath = LEFT(DBFname,RAT('\', DBFname))
      SET DEFAULT TO (FilePath)
      IF ATC('.DBF', DBFname)=0
        MemName=GETFILE('*', 'SELECT (if) MEMOFILE?')
      ENDIF
      =CheckVer(DBFname)
    ELSE
      =MessageBox("Invalid file selection: " + xDBFname, 0, "Recover Notice!")
    ENDIF
  ELSE
    DbfName = 'Not selected'
  ENDIF
  SHOW GETS
CASE RecSels = 2 && Fix file
  IF DbfName = 'Not selected'
    =MessageBox("DBF file Not Selected", 0, "Notice")
    RETURN
  ENDIF
  FileLen = FileLn(DBFname) && this may be the second time around and may have changed
  FileInfo = ALLT(STR(FileLen)) + " bytes."
  SHOW GET FileInfo
  IF .F. && FileLen > 2147483647
    OptCode = .F.
    OptCodes = 'TFFFTFFFFFFFFFFF'
    TempS = ""
    DO CASE
    CASE FILE(Default0 + "recovlck.exe")
      TEMPS = Default0 + "recovlck " + DBFname
    CASE FILE("recovlck.exe")
      TempS = "Recovlck " + DBFname
    OTHERWISE
      =MessageBox("Cannot locate required Recovlck.exe file.", 0, "Notice!")
      RETURN
    ENDCASE
    !/N &TempS
  ELSE
    =illegal(DbfName, MemName, OptCodes, DEXT)
  ENDIF
CASE RecSels = 3 && ViewFile
  Hide Window Recovers && otherwise distractions
  PRIVATE RScanLevel
  DO CASE
  CASE SUBSTR(OptCodes, 4, 1) = 'T'
    RScanLevel = 3
  CASE SUBSTR(OptCodes, 3, 1) = 'T'
    RScanLevel = 2
  CASE SUBSTR(OptCodes, 2, 1) = 'T'
    RScanLevel = 1 && check delete flag or trace code at least
  OTHERWISE
    RScanLevel = 0
  ENDCASE

  =Illegal(DbfName, RScanLevel, "BROWS")
  RELEASE RScanLevel
  Show Window Recovers

ENDCASE


*       *********************************************************
*       *                                                         
*       * RECSELS2V           RecSels2 VALID                      
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         RECOVERS,     Record Number:    7  
*       * Variable:            RecSels2                           
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      2                                  
*       *                                                         
*       *********************************************************
*
FUNCTION RECSELS2V     &&  RecSels2 VALID
#REGION 1

DO CASE
CASE RecSels2 = 1 && View RECOVREP.TXT file
  RepPath = FULLPATH('RECOVREP.TXT')
  IF !EMPTY(RepPath)
    MODIFY FILE (RepPath) NOEDIT
  ENDIF
CASE RecSels2 = 2 && Generate .DEF file
  IF !FILE(DBFname) && bad .dbf name required
    =MessageBox("Select target .DBF file first!", 0, "Notice:")
    RETURN
  ENDIF
  PRIVATE GoodFile, GoodMemName, DBFleft, DefFile, GoodLeft, ErrorCode, Talias
  * Get good file loc and gen and copy next to bad file
  Talias = IIF(RAT('\', DBFname)>0, SUBSTR(DBFname, RAT('\', DBFname)+1), Talias)
  Talias = IIF(ATC('.', Talias)>0, LEFT(Talias, ATC('.', Talias)-1), Talias)
  IF USED(Talias)
    USE IN (Talias)
  ENDIF
  SELECT 0
  GoodFile = DBFName
  GoodMemName = ''
  IF ATC('.DBF', GoodFile)=0
    GoodMemName=GETFILE('*', 'SELECT complete MemoFile name:', 'Select', 0)
  ENDIF
  IF GenDef(GoodFile, GoodMemName, GenDefOpts) < 0
    =MessageBox("For accurate results, GenDef requires good copy of "+DBFName+" - select a backup or any correct copy!", 0, "Notice!")
    GoodFile = GETFILE('DBF', 'Good DBF', 'Select', 0)
    IF ATC('.DBF', GoodFile)=0 AND DBFName != GoodFile
      GoodMemName=GETFILE('*', 'SELECT good MemoFile:', 'Select', 0)
    ENDIF
    IF EMPTY(GoodFile)
      RETURN
    ENDIF
    GoodMemName = ''
    =GenDef(GoodFile, GoodMemName, GenDefOpts)
    DBFleft =  UPPER(IIF(RAT('.', DBFName)>0,  LEFT(DBFName,  RAT('.',DBFName)-1), DBFName ))
    DefFile = DBFleft+'.DEF'
    GoodLeft = UPPER(IIF(RAT('.', GoodFile)>0, LEFT(GoodFile, RAT('.',GoodFile)-1), GoodFile))
    IF GoodFile != DBFName
      ERASE (DefFile)
      COPY FILE (GoodLeft + '.DEF') TO (DefFile)
    ENDIF
  ENDIF
  =CheckVer(DBFname)
CASE RecSels2 = 3 && Help/Instr.
  HelpPath = IIF(EMPTY(HelpPath), GETFILE('TXT', "Where is MANUAL.TXT?"), HelpPath)
  IF !EMPTY(HelpPath)
    MODIFY FILE (HelpPath) NOEDIT
  ENDIF
ENDCASE


*       *********************************************************
*       *                                                         
*       * ROPTSV           Ropts VALID                            
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         RECOVERS,     Record Number:    8  
*       * Variable:            Ropts                              
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      3                                  
*       *                                                         
*       *********************************************************
*
FUNCTION ROPTSV     &&  Ropts VALID
#REGION 1
IF Ropts = 1
  DO recopts.spr
ELSE
  CLEAR READ
ENDIF


*       *********************************************************
*       *                                                         
*       * _1QB0Q9GCE           Read Level Show                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         RECOVERS                           
*       * Called By:           READ Statement                     
*       * Snippet Number:      4                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _1qb0q9gce     && Read Level Show
PRIVATE currwind
STORE WOUTPUT() TO currwind
*
* Show Code from screen: RECOVERS
*
#REGION 1
IF SYS(2016) = "RECOVERS" OR SYS(2016) = "*"
	ACTIVATE WINDOW recovers SAME
	@ 2.846,14.800 SAY Dbfname ;
		SIZE 1.000,73.400, 0.000 ;
		FONT "MS Sans Serif", 8 ;
		PICTURE "@T"
	@ 3.923,14.800 SAY FileInfo ;
		SIZE 1.000,47.200, 0.000 ;
		FONT "MS Sans Serif", 8
ENDIF
IF NOT EMPTY(currwind)
	ACTIVATE WINDOW (currwind) SAME
ENDIF