*       *********************************************************
*       *                                                         
*       * 10/30/97            BSALVAGE.PRG               23:38:07 
*       *                                                         
*       *********************************************************
*       *                                                         
*       * Author's Name                                           
*       *                                                         
*       * Copyright (c) 1997 Company Name                         
*       * Address                                                 
*       * City,     Zip                                           
*       *                                                         
*       * Description:                                            
*       * This program was automatically generated by GENSCRN.    
*       *                                                         
*       *********************************************************


*       *********************************************************
*       *                                                         
*       *         BSALVAGE/Windows Setup Code - SECTION 1         
*       *                                                         
*       *********************************************************
*

#REGION 1

PRIVATE OldSfont, OldSfontSize, SetCent
SetCent = SET("CENTURY")
SET CENTURY OFF
OldSfont = WFONT(1, "SCREEN")
OldSfontSize = WFONT(2, "SCREEN")
MODIFY WINDOW SCREEN FONT "Courier New", 10


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

m.rborder = SET("READBORDER")
SET READBORDER ON

*       *********************************************************
*       *                                                         
*       *               Windows Window definitions                
*       *                                                         
*       *********************************************************
*

IF NOT WEXIST("_rn60r8lzq")
	DEFINE WINDOW _rn60r8lzq ;
		AT  0.000, 0.000  ;
		SIZE 19.375,74.625 ;
		TITLE "Visual file pieces salvage" ;
		FONT "Courier New", 10 ;
		FLOAT ;
		NOCLOSE ;
		NOMINIMIZE ;
		COLOR RGB(,,,192,192,192)
	MOVE WINDOW _rn60r8lzq CENTER
ENDIF


*       *********************************************************
*       *                                                         
*       *         BSALVAGE/Windows Setup Code - SECTION 2         
*       *                                                         
*       *********************************************************
*

#REGION 1

#DEFINE Tstng .F.
#IF Tstng

*** Temporary for testing...
FileLen = 17786
EofMark = 1
FirstRecPos = 417
DBFhandle = FOPEN("sample5.dbf",2)
RecordLen = 167
USE sample5.def ALIAS RecoverDef
VFP = .F.
SET PROCEDURE TO recover.prg
*** End Temporary for testing

#ENDIF

PRIVATE BlockArray, BlockList, FilePos, CurFilePos, RecPosNum, FstTRPos, RECS
PRIVATE BlockCount, Wheight, Wwidth, Bheight, OldRPN, Nrecs, RecStr
PRIVATE FileText, FileRecords, SensLvl

SensLvl = RScanLevel
FileText = ''
RecStr=''
FileRecords = (FileLen - EofMark - FirstRecPos)/RecordLen && should be
SensLvl = IIF(FileRecords<3000, 2, RScanLevel)
RECS = 1
** these may not be needed in VFP
Wheight = 19.00 && bsalvage window vertical size
Wwidth = 119.00 && ............... horizontal size
Bheight = 4.00 && record browse window height.

Nrecs = 1 && number of records shown in File Record Viewer
FstTRPos = Cr_RecT() && create temp filepos browse file
FilePos = IIF(FileLen > 1.5*FirstRecPos, FirstRecPos, 0)
CurFilePos = FilePos
RecPosNum = (FilePos - FirstRecPos)/RecordLen + 1 && 1st record is #1
OldRPN = RecPosNum
BlockCount = 0 && blockcounter for BlockList
DIMENSION BlockArray [1]
BlockArray[1] = "StartRecPos EndRecPos"
BlockList = ''
CRLF = CHR(13)+CHR(10)

*** Block marker mouse indicators
PRIVATE TextStart
PRIVATE BrLines, LineChars, BrSize, FirstCY, FirstCX
FirstCY = 1 && Y start pos of 1st displayed char on screen in white rectangle
FirstCX = 1 && X start pos of 1st displayed char on screen in white rectangle
brlines = 14 && number of browse lines in box
LineChars = 47 && number of characters per line
TextStart = -1 && first char file pos of text display - initially unknown (-1)
brsize = brlines*LineChars && characters in browse box
ON KEY LABEL MOUSE DO showpos

=GetBrowse() && get record browse window


*       *********************************************************
*       *                                                         
*       *             BSALVAGE/Windows Screen Layout              
*       *                                                         
*       *********************************************************
*

#REGION 1
IF WVISIBLE("_rn60r8lzq")
	ACTIVATE WINDOW _rn60r8lzq SAME
ELSE
	ACTIVATE WINDOW _rn60r8lzq NOSHOW
ENDIF
@ 0.875,0.750 TO 19.063,48.875 ;
	PATTERN 1 ;
	PEN 1, 0 ;
	COLOR RGB(,,,255,255,255)
@ 15.750,48.625 TO 19.063,66.375 ;
	PATTERN 1 ;
	PEN 1, 0 ;
	COLOR RGB(,,,255,255,255)
@ 4.188,48.750 TO 14.001,73.875 ;
	PATTERN 1 ;
	PEN 0, 8 ;
	COLOR RGB(0,0,255,255,255,255)
@ 4.625,50.125 SAY "Saved block(s)" ;
	FONT "MS Sans Serif", 10 ;
	STYLE "BT" ;
	COLOR RGB(128,0,0,,,,)
@ 1.813,49.875 TO 4.063,73.750 ;
	PATTERN 1 ;
	PEN 1, 8 ;
	STYLE "16" ;
	COLOR RGB(,,,255,255,255)
@ 0.000,22.500 SAY "Records?" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T"
@ 0.063,0.125 SAY "EOF:" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T"
@ 17.750,2.250 SAY "BOF     Recs     EOF." ;
	FONT "Courier New", 8 ;
	STYLE "BT"
@ 15.125,15.875 SAY "Record position controls" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	COLOR RGB(128,0,0,255,255,255)
@ 0.000,11.125 SAY "RecSize:" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T"
@ 15.125,0.750 TO 15.125,48.750 ;
	PEN 1, 8 ;
	STYLE "1" ;
	COLOR RGB(192,192,192,192,192,192)
@ 16.375,49.000 SAY "RecNum:" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "BT"
@ 17.750,47.000 SAY "FilePosition:" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "BT"
@ 16.500,34.625 SAY "Scan Quality:" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "BT"
@ 0.063,3.375 SAY FileLen - 1 ;
	SIZE 1.000,11.200 ;
	FONT "MS Sans Serif", 8 ;
	PICTURE "@B"
@ 0.063,16.875 SAY RecordLen ;
	SIZE 1.000,6.800 ;
	FONT "MS Sans Serif", 8 ;
	PICTURE "@B ####"
@ 0.063,28.625 SAY FileRecords ;
	SIZE 1.000,11.200 ;
	FONT "MS Sans Serif", 8 ;
	PICTURE "@B"
@ 0.313,54.625 GET Instrs ;
	PICTURE "@*HN Instructions" ;
	SIZE 1.100,12.556,0.444 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 12 ;
	STYLE "B" ;
	VALID INSTRSV()
@ 2.188,50.875 GET OkCanc ;
	PICTURE "@*HT Done;Cancel" ;
	SIZE 1.500,10.500,1.000 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 10 ;
	STYLE "B"
@ 4.500,64.875 GET CancBl ;
	PICTURE "@*HN Undo Last" ;
	SIZE 1.385,10.833,0.667 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID CancBlV()
@ 5.938,50.375 GET BlockList ;
 	PICTURE "@&N" ;
	FROM BlockArray ;
	SIZE 6.857,26.000 ;
	DEFAULT 1 ;
	FONT "Courier New", 8
@ 12.438,50.500 GET MarkBlock ;
	PICTURE "@*HN MarkStartRec;MarkEndRec" ;
	SIZE 1.462,14.167,0.333 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID MarkBlockV()
@ 14.250,50.125 GET CheckRec ;
	PICTURE "@*HN Check record" ;
	SIZE 1.385,13.833,0.667 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID CheckRecV()
@ 14.250,61.625 GET ChDel ;
	PICTURE "@*HN Toggle Delete" ;
	SIZE 1.385,14.500,0.667 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID ChDelV()
@ 16.250,2.375 GET NavL ;
	PICTURE "@*HN |<;<<" ;
	SIZE 1.462,4.500,0.167 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID NavV(NavL)
@ 16.438,9.625 GET Recs ;
	SIZE 0.938,3.250 ;
	DEFAULT 0 ;
	FONT "Courier New", 10 ;
	PICTURE "@KB" ;
	VALID Recs>0
@ 16.250,13.375 GET NavR ;
	PICTURE "@*HN >>;>|" ;
	SIZE 1.462,4.500,0.167 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID NavV(NavR+4)
@ 16.188,23.000 GET ScanRecs ;
	PICTURE "@*VN Scan good;Skip bad" ;
	SIZE 1.615,12.333,0.000 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID SCANRECS()
@ 17.688,33.500 GET SensLvl ;
	PICTURE "@*RHN 1;2;3" ;
	SIZE 1.308,5.167,0.000 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "BT"
@ 16.375,56.125 GET RecPosNum ;
	SIZE 1.000,13.600 ;
	DEFAULT 0 ;
	FONT "MS Sans Serif", 8 ;
	PICTURE "@KB" ;
	VALID RecPosNumV()
@ 17.750,56.125 GET FilePos ;
	SIZE 1.000,13.600 ;
	DEFAULT 0 ;
	FONT "MS Sans Serif", 8 ;
	PICTURE "@KB" ;
	VALID FilePosV()

IF NOT WVISIBLE("_rn60r8lzq")
	ACTIVATE WINDOW _rn60r8lzq
ENDIF

READ CYCLE ;
	WHEN BSALVAGEW()

RELEASE WINDOW _rn60r8lzq

#REGION 0

SET READBORDER &rborder

IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       *********************************************************
*       *                                                         
*       *              BSALVAGE/Windows Cleanup Code              
*       *                                                         
*       *********************************************************
*

#REGION 1
ON KEY LABEL MOUSE
USE IN recovert
ERASE recovert.dbf
ERASE recovert.fpt
IF SetCent = 'ON'
  SET CENTURY ON
ENDIF

********* Temporary for testing
*=FCLOSE(dbfhandle)
*USE IN recoverdef
*RETURN
*PROCEDURE x
********* END Temporary for testing


* MODIFY WINDOW SCREEN FONT "MS Sans Serif", 8 && temporary for testing - restores original in case of cancel

MODIFY WINDOW SCREEN FONT oldsfont, oldsfontsize
IF okcanc = 1
  IF blockcount>0
    DIMENSION blockarray[BlockCount+1]
    IF LEN(blockarray[BlockCount+1]) < 20
      tempno = VAL(LEFT(blockarray[BlockCount+1],11))
      blockarray[BlockCount+1] = blockarray[BlockCount+1];
        + STR(tempno+INT((FileLen-tempno)/recordlen)*recordlen - recordlen, 11, 0)
    ENDIF
    =ASORT(blockarray,2)
    PRIVATE i
    FOR i = 1 TO blockcount
      INSERT INTO _recoverpc VALUES(VAL(LEFT(blockarray[i+1],11)), VAL(RIGHT(blockarray[i+1],11)))
    ENDFOR
  ENDIF
  RETURN blockcount
ELSE
  RETURN 0
ENDIF



*       *********************************************************
*       *                                                         
*       *  BSALVAGE/Windows Supporting Procedures and Functions   
*       *                                                         
*       *********************************************************
*

#REGION 1
PROCEDURE Xpos
PARAMETER Fspot
RETURN INT((Fspot - TextStart) % LineChars) + FirstCX

PROCEDURE Ypos
PARAMETER Fspot
RETURN INT((Fspot - TextStart) / LineChars) + FirstCY

PROCEDURE ShowPos
* moves record pointer on mouse click
PRIVATE nx, ny TempNo
ny = INT(MROW()-.08)
nx = INT(MCOL()-.125)
IF !(nx>FirstCx-1 AND nx<(linechars+FirstCx) AND ny<brlines+FirstCY AND ny>FirstCY-1) OR !WONTOP('_rn60r8lzq')
  * Mouse click outside of square - and window must be top
  RETURN
ENDIF

TempNo = TextStart + (ny-FirstCY)*LineChars + (nx-FirstCx)
IF TempNo > FileLen - RecordLen/2 && cannot set pointer beyond begin + .5 of last record
  ?? CHR(7)
  RETURN
ENDIF
FilePos = TempNo
=FilePosV()
SHOW WINDOW _rn60r8lzq REFRESH

*************************
PROCEDURE ShowText
* writes text to browse view area and moves mouse square
DO CASE
CASE FilePos < LineChars*(brlines-1) OR FileLen <= BrSize
  * near enough to start pos or small file
  TextStart = 0

CASE TextStart>-1 AND  (FilePos > TextStart + LineChars - 1);
    AND FilePos < TextStart + LineChars*(brlines-1) + 1
  * FilePos in correct range
  * just leave textstart as is

CASE FilePos > FileLen - BrSize + LineChars
  * change FilePos to FileLen - RecordLen  if beyond that
  * near end
  TextStart = FileLen - BrSize
OTHERWISE
  * generally in middle somewhere
  TextStart = INT(FilePos - BrSize/2 + LineChars/2)
ENDCASE

PRIVATE TempNo, i
=FSEEK(DBFHandle, TextStart)
FileText=FREAD(DBFhandle, brsize)

FileText = PADR(filetext, brsize) && just in case too small
* cover up previous 'text' if any
@ 0.938,0.875 TO 15.188, 48.350 ;
  PATTERN 1 ;
  PEN 1, 0 ;
  COLOR RGB(,,,255,255,255)
* write the 'text'
** draw characters before record
FOR i = TextStart TO FilePos - 1
  @ Ypos(i), Xpos(i) + 0.1 SAY SUBSTR(FileText, i-TextStart+1, 1) ;
    FONT "Courier New", 10;
    COLOR RGB(,,,255,255,255)
ENDFOR

** draw delete char
=DrawDel()
** draw rest of record characters
TempNo = MIN(FilePos + RecordLen -1, TextStart+BrSize-1)
FOR i=FilePos+1 TO TempNo
  @ Ypos(i), Xpos(i) + 0.1 SAY SUBSTR(FileText, i-TextStart+1, 1) ;
    FONT "Courier New", 10;
    COLOR RGB(,,,0,255,0)
NEXT i

** draw chars to end of display
IF TempNo < TextStart + brsize - 1
  FOR i=TempNo+1 TO TextStart + brsize - 1
    @ Ypos(i), Xpos(i) + 0.1 SAY SUBSTR(FileText, i-TextStart+1, 1) ;
      FONT "Courier New", 10;
      COLOR RGB(,,,255,255,255)
  NEXT i
ENDIF
** Draw box around del char again
* SHOW GETS OFF && for BrPointer

PROCEDURE DrawDel
@ Ypos(FilePos), Xpos(FilePos) + 0.1 SAY SUBSTR(FileText, FilePos-TextStart+1, 1) ;
  FONT "Courier New", 10;
  COLOR RGB(,,,255,0,0)


PROCEDURE getbrowse
* creates browse view for records at FilePos
IF USED("RecoverT")
  USE IN recovert
ENDIF

= FSEEK(dbfhandle, FilePos)
PRIVATE filehandle
filehandle = FOPEN("RecoverT.dbf", 2)
=FSEEK(filehandle, fsttrpos)

recstr=FREAD(dbfhandle, recordlen)
=FWRITE(filehandle, recstr)
=putvalue(filehandle, 4, 1, 4,1) && set record counter to 1
=FCHSIZE(filehandle, fsttrpos + recordlen+1)
=FCLOSE(filehandle)
SELECT 0
USE recovert.dbf

ACTIVATE WINDOW SCREEN
DEFINE WINDOW _brow12 AT 0.000,0.000 SIZE bheight, wwidth ;
  FONT 'MS Sans Serif', 8 STYLE 'N' FLOAT NOGROW NOMINIMIZE NOZOOM NOCLOSE
MOVE WINDOW _brow12 CENTER
ACTIVATE WINDOW _brow12
MOVE WINDOW _brow12 BY (wheight)/2+1, 0
browwin='Record line-up viewer'
BROWSE TITLE browwin FONT 'MS Sans Serif', 8 STYLE 'N';
  WINDOW _brow12 NOWAIT NODELETE NOAPPEND NOEDIT NOMENU
RELEASE WINDOW _brow12

PROCEDURE RecPosNumV
FilePos = (RecPosNum -1)*recordlen+firstrecpos
=FilePosV()

PROCEDURE FilePosv
* moves file pointer to new pos.
IF CurFilePos = FilePos
  RETURN
ENDIF
IF  FilePos > FileLen - RecordLen/2 OR FilePos < 0
  FilePos = CurFilePos
  RecPosNum = (FilePos - firstrecpos)/recordlen + 1
  SHOW GET FilePos
  SHOW GET RecPosNum
  ?? CHR(7)
  RETURN
ENDIF
CurFilePos = FilePos
RecPosNum = (FilePos - firstrecpos)/recordlen + 1
oldrpn = RecPosNum
SHOW GET RecPosNum
SHOW GET FilePos
=ShowText()
=getbrowse()

PROCEDURE navv
PARAMETER navn
DO CASE
CASE navn = 1
  FilePos = 0
CASE navn = 2
  FilePos = FilePos - RECS*recordlen
  *CASE navn = 3
  *  FilePos = FilePos - 1
  *CASE navn = 4
  *  FilePos = FilePos + 1
CASE navn = 5
  FilePos = FilePos + RECS*recordlen
CASE navn = 6
  FilePos = FileLen - recordlen
ENDCASE
IF FilePos = CurFilePos
  RETURN
ENDIF
IF FilePos > FileLen - recordlen/2 OR FilePos < 0
  FilePos = CurFilePos
  RETURN
ENDIF
CurFilePos = FilePos
RecPosNum = (FilePos - firstrecpos)/recordlen + 1
oldrpn = RecPosNum
SHOW GET RecPosNum
SHOW GET FilePos
=ShowText()
=getbrowse()

********************
PROCEDURE CheckRecV
PRIVATE temps
temps = recval(recstr,.T., Senslvl, .F.)
IF LEN(temps)>0
  =rMsgBox(temps, "Notice:",0)
ELSE
  =rMsgBox('Record appears OK!', "Notice:",0)
ENDIF
RETURN

*************************
PROCEDURE markblockv
* Marks first/last record in saved block
** check if left pressed and left already exists
** or right pressed and left doesnt exist
IF ((markblock=1 AND LEN(BlockArray[BlockCount+1])<20);
    OR (markblock=2 AND LEN(BlockArray[BlockCount+1])>20));
    AND blockcount>0
  ?? CHR(7)
  RETURN
ENDIF
IF markblock = 1 && new left hand entry
  * check for overlaping blocks
  IF boverlap()
    RETURN
  ENDIF
  blockcount = blockcount+1
  DIMENSION blockarray[BlockCount+1]
  blockarray[BlockCount+1] = STR(FilePos, 11, 0)
ELSE && new right hand entry
  IF boverlap()
    RETURN
  ENDIF
  blockarray[BlockCount+1] = blockarray[BlockCount+1] + STR(FilePos, 11, 0)
ENDIF
blocklist = blockarray[BlockCount+1]
SHOW GET blocklist

**************
PROCEDURE boverlap
* checks for incorrect new position entry
* Check for integer block count
PRIVATE BC
IF LEN(BlockArray[BlockCount+1])<20 && this is a right hand entry - previous entry was left
  IF (FilePos - VAL(LEFT(BlockArray[BlockCount+1],11))) % recordlen !=0;
      OR FilePos < VAL(LEFT(BlockArray[BlockCount+1],11))
    ?? CHR(7)
    =rMsgBox("Block Start/End record positions do not match"+CHR(13)+"(or incorrect .def file)!", "Notice:",0)
    RETURN .T.
  ENDIF
  ** check for overlaps of this right entry
  BC = BlockCount-1
ELSE
  ** check for overlaps of this left entry
  BC = BlockCount
ENDIF
FOR ii = 1 TO BC
  IF VAL(LEFT(BlockArray[ii+1],11))<=FilePos AND;
      FilePos<=VAL(RIGHT(BlockArray[ii+1],11)) + RecordLen -1
    ?? CHR(7)
    =rMsgBox("Selected position overlaps a file block!", "Notice:",0)
    RETURN .T.
  ENDIF
ENDFOR
RETURN .F.

*********************
PROCEDURE cancblv
* Removes last block mark
IF blockcount=0
  RETURN
ENDIF
IF LEN(blockarray[BlockCount+1]) > 11
  blockarray[BlockCount+1] = LEFT(blockarray[BlockCount+1],11)
ELSE
  blockcount=blockcount-1
  DIMENSION blockarray[BlockCount+1]
ENDIF
blocklist = blockarray[BlockCount+1]
SHOW GET blocklist

**********************
PROCEDURE ChDelV
* Toggles delete flag
SELECT RecoverT
PRIVATE OldChar, NewChar
OldChar = GetString(DBFhandle, FilePos, 1)
NewChar = IIF(OldChar == ' ', Left(DelChar,1), ' ')
IF rMsgBox("This changes the '" + OldChar + "' character to '" + NewChar;
    + "'. Original character may be lost if you change your mind!" + CHR(13)  + CHR(13) + "Continue?", "Notice:", 1)==2
  RETURN
ENDIF
=PutString(DBFhandle, FilePos, NewChar)
FileText=STUFF(FileText, FilePos-TextStart+1, 1, NewChar)
=DrawDel()
RecStr = STUFF(RecStr, 1, 1, NewChar)
IF OldChar == ' '
  DELETE
ELSE
  RECAL
ENDIF
SHOW WINDOW ('Record line-up viewer') REFRESH


*       *********************************************************
*       *                                                         
*       * INSTRSV           Instrs VALID                          
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         BSALVAGE,     Record Number:   19  
*       * Variable:            Instrs                             
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      1                                  
*       *                                                         
*       *********************************************************
*
FUNCTION INSTRSV     &&  Instrs VALID
#REGION 1
Private HelpPath
HelpPath = IIF(File("MANUAL.TXT"), FULLPATH("MANUAL.TXT"), getfile('TXT', "Where is MANUAL.TXT?"))
IF !Empty(HelpPath)
  PRIVATE InstrStr, FileHandle, TempS, i, TempNo
  FileHandle = FOPEN(HelpPath)
  TempNo = FSEEK(FileHandle,0,2)
  IF FileHandle > 0
    TempNo=SrchFile(FileHandle, INT(TempNo/3), TempNo, "3.9 vFPS")
    InstrStr = ''
    TempS=FGETS(FileHandle)
    DO WHILE ATC("4.0", TempS)==0 AND !FEOF(FileHandle)
      InstrStr = InstrStr + TempS+chr(13)+chr(10)
      TempS=FGETS(FileHandle)
    ENDDO
    DO Bsalvi.spr
    =FCLOSE(FileHandle)
    RETURN
  ENDIF
ENDIF
=rMsgBox("Could not find MANUAL.TXT file. vFPS instructions are in section 3.9 of the file or in the printed manual!","Notice!",0)


*       *********************************************************
*       *                                                         
*       * SCANRECS           ScanRecs VALID                       
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         BSALVAGE,     Record Number:   29  
*       * Variable:            ScanRecs                           
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      2                                  
*       *                                                         
*       *********************************************************
*
FUNCTION SCANRECS     &&  ScanRecs VALID
#REGION 1
PRIVATE PrevSec, TempS2, TempS, i
* scan through records
=FSEEK(DBFhandle, FilePos + RecordLen)
PrevSec = SECONDS()
i=RecPosNum
=WaitWin("Checking record - "+STR(RecPosNum+1))

DO WHILE !FEOF(DBFhandle)
  i=i+1
  TempS2=FREAD(DBFHandle, RecordLen)
  TempS = ''
  IF LEN(TempS2) == RecordLen
    TempS = RecVal(TempS2, .T., SensLvl, .F.)
  ENDIF
  IF SECONDS() > PrevSec+2.0
    =WaitWin("Checking record - "+ALLT(STR(i)))
    PrevSec = SECONDS()
  ENDIF
  IF LEN(TempS2)==RecordLen && !FEOF
    IF (LEN(TempS)>0 AND ScanRecs == 1) && scan good records until bad found
      * warning or error record found
      FilePos = FSEEK(DBFhandle, 0 , 1) - 2*RecordLen
      =WaitWin()
      =FilePosV()
      =rMsgBox(TempS + " in next record!", "Notice:",0)
      RETURN
    ENDIF
    IF LEN(TempS)==0 AND ScanRecs == 2 && scan to good record
      * good record found
      FilePos = FSEEK(DBFhandle, 0 , 1) - RecordLen
      =WaitWin()
      =FilePosV()
      =rMsgBox("This record appears OK", "Notice:",0)
      RETURN
    ENDIF
  ENDIF
  IF FEOF(DBFHandle) && EOF - display Last Record & 'No Errors found' message
    FilePos = FSEEK(DBFhandle, 0 , 1) - RecordLen - LEN(TempS2)
    =WaitWin()
    =FilePosV()
    =rMsgBox('End of file reached!', "Notice:",0)
    RETURN
  ENDIF

ENDDO


*       *********************************************************
*       *                                                         
*       * BSALVAGEW           Read Level When                     
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         BSALVAGE                           
*       * Called By:           READ Statement                     
*       * Snippet Number:      3                                  
*       *                                                         
*       *********************************************************
*
FUNCTION BSALVAGEW     && Read Level When
*
* When Code from screen: BSALVAGE
*
#REGION 1

MOVE WINDOW _rn60r8lzq by -Bheight/2, 0
=ShowText()
